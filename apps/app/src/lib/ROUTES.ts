/**
 * This file was generated by 'vite-plugin-kit-routes'
 *
 *      >> DO NOT EDIT THIS FILE MANUALLY <<
 */

export const PAGES = {
  "/": (sp?: Record<string, string | number>) => {
    return `/${appendSp(sp)}`;
  },
  "/admin": (sp?: Record<string, string | number>) => {
    return `/admin${appendSp(sp)}`;
  },
  "/admin/users": (sp?: Record<string, string | number>) => {
    return `/admin/users${appendSp(sp)}`;
  },
  "/login": (sp?: Record<string, string | number>) => {
    return `/login${appendSp(sp)}`;
  },
  "/nutrition": (sp?: Record<string, string | number>) => {
    return `/nutrition${appendSp(sp)}`;
  },
  "/nutrition/log": (sp?: Record<string, string | number>) => {
    return `/nutrition/log${appendSp(sp)}`;
  },
  "/profile": (sp?: Record<string, string | number>) => {
    return `/profile${appendSp(sp)}`;
  },
  "/profile/[username]": (
    params: { username: string | number },
    sp?: Record<string, string | number>,
  ) => {
    return `/profile/${params.username}${appendSp(sp)}`;
  },
  "/profile/calendar": (sp?: Record<string, string | number>) => {
    return `/profile/calendar${appendSp(sp)}`;
  },
  "/profile/exercises": (sp?: Record<string, string | number>) => {
    return `/profile/exercises${appendSp(sp)}`;
  },
  "/profile/measures": (sp?: Record<string, string | number>) => {
    return `/profile/measures${appendSp(sp)}`;
  },
  "/profile/settings": (sp?: Record<string, string | number>) => {
    return `/profile/settings${appendSp(sp)}`;
  },
  "/profile/settings/account": (sp?: Record<string, string | number>) => {
    return `/profile/settings/account${appendSp(sp)}`;
  },
  "/profile/settings/app": (sp?: Record<string, string | number>) => {
    return `/profile/settings/app${appendSp(sp)}`;
  },
  "/profile/settings/connections": (sp?: Record<string, string | number>) => {
    return `/profile/settings/connections${appendSp(sp)}`;
  },
  "/profile/settings/contact": (sp?: Record<string, string | number>) => {
    return `/profile/settings/contact${appendSp(sp)}`;
  },
  "/profile/settings/language": (sp?: Record<string, string | number>) => {
    return `/profile/settings/language${appendSp(sp)}`;
  },
  "/profile/settings/legal": (sp?: Record<string, string | number>) => {
    return `/profile/settings/legal${appendSp(sp)}`;
  },
  "/profile/settings/notifications": (sp?: Record<string, string | number>) => {
    return `/profile/settings/notifications${appendSp(sp)}`;
  },
  "/profile/settings/profile": (sp?: Record<string, string | number>) => {
    return `/profile/settings/profile${appendSp(sp)}`;
  },
  "/profile/settings/q-and-a": (sp?: Record<string, string | number>) => {
    return `/profile/settings/q-and-a${appendSp(sp)}`;
  },
  "/profile/settings/theme": (sp?: Record<string, string | number>) => {
    return `/profile/settings/theme${appendSp(sp)}`;
  },
  "/profile/settings/units": (sp?: Record<string, string | number>) => {
    return `/profile/settings/units${appendSp(sp)}`;
  },
  "/profile/settings/workouts": (sp?: Record<string, string | number>) => {
    return `/profile/settings/workouts${appendSp(sp)}`;
  },
  "/profile/statistics": (sp?: Record<string, string | number>) => {
    return `/profile/statistics${appendSp(sp)}`;
  },
  "/programs": (sp?: Record<string, string | number>) => {
    return `/programs${appendSp(sp)}`;
  },
  "/programs/community": (sp?: Record<string, string | number>) => {
    return `/programs/community${appendSp(sp)}`;
  },
  "/programs/self": (sp?: Record<string, string | number>) => {
    return `/programs/self${appendSp(sp)}`;
  },
  "/register": (sp?: Record<string, string | number>) => {
    return `/register${appendSp(sp)}`;
  },
  "/train": (sp?: Record<string, string | number>) => {
    return `/train${appendSp(sp)}`;
  },
  "/train/log": (sp?: Record<string, string | number>) => {
    return `/train/log${appendSp(sp)}`;
  },
  "/train/log/add-exercises": (sp?: Record<string, string | number>) => {
    return `/train/log/add-exercises${appendSp(sp)}`;
  },
};

export const SERVERS = {
  "/manifest.webmanifest": (sp?: Record<string, string | number>) => {
    return `/manifest.webmanifest${appendSp(sp)}`;
  },
  "/sitemap.xml": (method: "GET", sp?: Record<string, string | number>) => {
    return `/sitemap.xml${appendSp(sp)}`;
  },
};

export const ACTIONS = {};

export const LINKS = {};

export const LINKS = {};

const appendSp = (sp?: Record<string, string | number | undefined>) => {
  if (sp === undefined) return "";
  const mapping = Object.entries(sp)
    .filter((c) => c[1] !== undefined)
    .map((c) => [c[0], String(c[1])]);

  const formated = new URLSearchParams(mapping).toString();
  if (formated) {
    return `?${formated}`;
  }
  return "";
};

/**
 * Add this type as a generic of the vite plugin `kitRoutes<KIT_ROUTES>`.
 *
 * Full example:
 * ```ts
 * import type { KIT_ROUTES } from './ROUTES'
 * import { kitRoutes } from 'vite-plugin-kit-routes'
 *
 * kitRoutes<KIT_ROUTES>({
 *  PAGES: {
 *    // here, "paths" it will be typed!
 *  }
 * })
 * ```
 */
export type KIT_ROUTES = {
  PAGES: {
    "/": never;
    "/admin": never;
    "/admin/users": never;
    "/login": never;
    "/nutrition": never;
    "/nutrition/log": never;
    "/profile": never;
    "/profile/[username]": "username";
    "/profile/calendar": never;
    "/profile/exercises": never;
    "/profile/measures": never;
    "/profile/settings": never;
    "/profile/settings/account": never;
    "/profile/settings/app": never;
    "/profile/settings/connections": never;
    "/profile/settings/contact": never;
    "/profile/settings/language": never;
    "/profile/settings/legal": never;
    "/profile/settings/notifications": never;
    "/profile/settings/profile": never;
    "/profile/settings/q-and-a": never;
    "/profile/settings/theme": never;
    "/profile/settings/units": never;
    "/profile/settings/workouts": never;
    "/profile/statistics": never;
    "/programs": never;
    "/programs/community": never;
    "/programs/self": never;
    "/register": never;
    "/train": never;
    "/train/log": never;
    "/train/log/add-exercises": never;
  };
  SERVERS: { "/manifest.webmanifest": never; "/sitemap.xml": never };
  ACTIONS: {};
  LINKS: {};
  Params: { username: never };
};
