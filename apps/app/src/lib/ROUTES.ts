/** 
 * This file was generated by 'vite-plugin-kit-routes'
 * 
 *      >> DO NOT EDIT THIS FILE MANUALLY <<
 */

export const PAGES = {
  "_ROOT": (sp?: Record<string, string | number>) =>  {
        return `/${appendSp(sp)}`
      },
  "admin": (sp?: Record<string, string | number>) =>  {
        return `/admin${appendSp(sp)}`
      },
  "admin_users": (sp?: Record<string, string | number>) =>  {
        return `/admin/users${appendSp(sp)}`
      },
  "login": (sp?: Record<string, string | number>) =>  {
        return `/login${appendSp(sp)}`
      },
  "nutrition": (sp?: Record<string, string | number>) =>  {
        return `/nutrition${appendSp(sp)}`
      },
  "nutrition_log": (sp?: Record<string, string | number>) =>  {
        return `/nutrition/log${appendSp(sp)}`
      },
  "profile": (sp?: Record<string, string | number>) =>  {
        return `/profile${appendSp(sp)}`
      },
  "profile_username": (params: {username: string | number}, sp?: Record<string, string | number>) =>  {
        return `/profile/${params.username}${appendSp(sp)}`
      },
  "profile_calendar": (sp?: Record<string, string | number>) =>  {
        return `/profile/calendar${appendSp(sp)}`
      },
  "profile_exercises": (sp?: Record<string, string | number>) =>  {
        return `/profile/exercises${appendSp(sp)}`
      },
  "profile_measures": (sp?: Record<string, string | number>) =>  {
        return `/profile/measures${appendSp(sp)}`
      },
  "profile_settings": (sp?: Record<string, string | number>) =>  {
        return `/profile/settings${appendSp(sp)}`
      },
  "profile_settings_account": (sp?: Record<string, string | number>) =>  {
        return `/profile/settings/account${appendSp(sp)}`
      },
  "profile_settings_app": (sp?: Record<string, string | number>) =>  {
        return `/profile/settings/app${appendSp(sp)}`
      },
  "profile_settings_connections": (sp?: Record<string, string | number>) =>  {
        return `/profile/settings/connections${appendSp(sp)}`
      },
  "profile_settings_contact": (sp?: Record<string, string | number>) =>  {
        return `/profile/settings/contact${appendSp(sp)}`
      },
  "profile_settings_language": (sp?: Record<string, string | number>) =>  {
        return `/profile/settings/language${appendSp(sp)}`
      },
  "profile_settings_legal": (sp?: Record<string, string | number>) =>  {
        return `/profile/settings/legal${appendSp(sp)}`
      },
  "profile_settings_notifications": (sp?: Record<string, string | number>) =>  {
        return `/profile/settings/notifications${appendSp(sp)}`
      },
  "profile_settings_profile": (sp?: Record<string, string | number>) =>  {
        return `/profile/settings/profile${appendSp(sp)}`
      },
  "profile_settings_q_and_a": (sp?: Record<string, string | number>) =>  {
        return `/profile/settings/q-and-a${appendSp(sp)}`
      },
  "profile_settings_theme": (sp?: Record<string, string | number>) =>  {
        return `/profile/settings/theme${appendSp(sp)}`
      },
  "profile_settings_units": (sp?: Record<string, string | number>) =>  {
        return `/profile/settings/units${appendSp(sp)}`
      },
  "profile_settings_workouts": (sp?: Record<string, string | number>) =>  {
        return `/profile/settings/workouts${appendSp(sp)}`
      },
  "profile_statistics": (sp?: Record<string, string | number>) =>  {
        return `/profile/statistics${appendSp(sp)}`
      },
  "programs": (sp?: Record<string, string | number>) =>  {
        return `/programs${appendSp(sp)}`
      },
  "programs_community": (sp?: Record<string, string | number>) =>  {
        return `/programs/community${appendSp(sp)}`
      },
  "programs_self": (sp?: Record<string, string | number>) =>  {
        return `/programs/self${appendSp(sp)}`
      },
  "register": (sp?: Record<string, string | number>) =>  {
        return `/register${appendSp(sp)}`
      },
  "train": (sp?: Record<string, string | number>) =>  {
        return `/train${appendSp(sp)}`
      },
  "train_log": (sp?: Record<string, string | number>) =>  {
        return `/train/log${appendSp(sp)}`
      },
  "train_log_add_exercises": (sp?: Record<string, string | number>) =>  {
        return `/train/log/add-exercises${appendSp(sp)}`
      }
}

export const SERVERS = {
  "manifest.webmanifest": (sp?: Record<string, string | number>) =>  {
        return `/manifest.webmanifest${appendSp(sp)}`
      },
  "sitemap.xml": (method: 'GET', sp?: Record<string, string | number>) =>  {
        return `/sitemap.xml${appendSp(sp)}`
      }
}

export const ACTIONS = {
  
}

export const LINKS = {
  
}

const appendSp = (sp?: Record<string, string | number | undefined>) => {
  if (sp === undefined) return ''
  const mapping = Object.entries(sp)
    .filter(c => c[1] !== undefined)
    .map(c => [c[0], String(c[1])])

  const formated = new URLSearchParams(mapping).toString()
  if (formated) {
    return `?${formated}`
  }
  return ''
}


/**
* Add this type as a generic of the vite plugin `kitRoutes<KIT_ROUTES>`.
* 
* Full example:
* ```ts
* import type { KIT_ROUTES } from './ROUTES'
* import { kitRoutes } from 'vite-plugin-kit-routes'
* 
* kitRoutes<KIT_ROUTES>({
*  PAGES: {
*    // here, "paths" it will be typed!
*  }
* })
* ```
*/
export type KIT_ROUTES = { 
  PAGES: { '_ROOT': never, 'admin': never, 'admin_users': never, 'login': never, 'nutrition': never, 'nutrition_log': never, 'profile': never, 'profile_username': 'username', 'profile_calendar': never, 'profile_exercises': never, 'profile_measures': never, 'profile_settings': never, 'profile_settings_account': never, 'profile_settings_app': never, 'profile_settings_connections': never, 'profile_settings_contact': never, 'profile_settings_language': never, 'profile_settings_legal': never, 'profile_settings_notifications': never, 'profile_settings_profile': never, 'profile_settings_q_and_a': never, 'profile_settings_theme': never, 'profile_settings_units': never, 'profile_settings_workouts': never, 'profile_statistics': never, 'programs': never, 'programs_community': never, 'programs_self': never, 'register': never, 'train': never, 'train_log': never, 'train_log_add_exercises': never }
  SERVERS: { 'manifest.webmanifest': never, 'sitemap.xml': never }
  ACTIONS: {  }
  LINKS: {  }
  Params: { username: never }
}
